terraform {
  required_version = "=1.0.10"
  required_providers {
    azurerm = {
      source  = "hashicorp/azurerm"
      version = "=2.86.0"
    }
  }
  backend "azurerm" {
      # Terraform does not accept variables here
      # https://github.com/hashicorp/terraform/issues/13022
      resource_group_name  = "$CICD_RESOURCE_GROUP"
      storage_account_name = "$CICD_STORAGE_ACCOUNT"
      container_name       = "$CICD_TFSTATE_BLOB"
      key                  = "$APP_NAME.tfstate"
  }
}

provider "azurerm" {
  features {}

  tenant_id       = var.arm_tenant_id
  subscription_id = var.arm_subscription_id
  client_id       = var.arm_client_id
  client_secret   = var.arm_client_secret
}

data "azurerm_container_registry" "cicd" {
  name                = var.cicd_container_registry
  resource_group_name = var.cicd_resource_group
}

# -----------------------------------------------------------------------------------------------
# Web Application
# -----------------------------------------------------------------------------------------------
module "primary_cloudy_ghost" {
  source             = "./modules/ghost-app"

  app_name           = var.app_name
  location           = var.primary_location
  shared_name        = local.primary_shared_name

  app_version        = var.ghost_version

  container_registry = data.azurerm_container_registry.cicd
  key_vault          = module.core_services.key_vault
  db                 = module.persistence_db
  log_analytics      = module.core_services.log_analytics

  # Keyvault & LogAnalytics late creation/setup cause errors otherwise
  depends_on         = [module.core_services]
}

module "secondary_cloudy_ghost" {
  source             = "./modules/ghost-app"

  app_name           = var.app_name
  location           = var.secondary_location
  shared_name        = local.secondary_shared_name

  app_version        = var.ghost_version

  container_registry = data.azurerm_container_registry.cicd
  key_vault          = module.core_services.key_vault
  db                 = module.persistence_db
  log_analytics      = module.core_services.log_analytics

  # Keyvault & LogAnalytics late creation/setup cause errors otherwise
  depends_on         = [module.core_services]
}

# -----------------------------------------------------------------------------------------------
# "Core" services
# -----------------------------------------------------------------------------------------------
module "core_services" {
  source   = "./modules/core"

  location    = var.primary_location
  rg_name     = local.core_rg_name
  shared_name = local.primary_shared_name
}

# -----------------------------------------------------------------------------------------------
# Persistence (Database)
# -----------------------------------------------------------------------------------------------
module "persistence_db" {
  source        = "./modules/mysqldb"

  location      = module.core_services.location
  rg_name       = module.core_services.resource_group.name
  shared_name   = local.primary_shared_name

  server_name   = local.database_server_name
  db_name       = var.app_name

  key_vault     = module.core_services.key_vault
  log_analytics = module.core_services.log_analytics

  # Keyvault & LogAnalytics late creation/setup cause errors otherwise
  depends_on    = [module.core_services]
}

# -----------------------------------------------------------------------------------------------
# FrontDoor service
# -----------------------------------------------------------------------------------------------
module "front_door" {
  source                    = "./modules/frontdoor"

  app_name                  = var.app_name
  rg_name                   = local.core_rg_name
  shared_name               = local.core_shared_name

  primary_web_application   = module.primary_cloudy_ghost.web_application
  secondary_web_application = module.secondary_cloudy_ghost.web_application

  # Keyvault & LogAnalytics late creation/setup cause errors otherwise
  depends_on    = [module.core_services]
}


